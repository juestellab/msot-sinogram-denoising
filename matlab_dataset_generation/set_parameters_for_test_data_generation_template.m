% ****************************************************************
% *** HOWTO
% ****************************************************************
% 0) Do not modify this template file "set_parameters_for_test_data_generation_template.py"
% 1) Create a new copy of this file "set_parameters_for_test_data_generation_template.py" in your local environment and rename it into "set_parameters_for_test_data_generation.py"
% 2) Indicate all the variables according to your local environment and experiment
% 3) Use your own "set_parameters_for_test_data_generation.py" file to run the code
% 4) Do not commit/push your own "set_parameters_for_test_data_generation.py" file to the collective repository, it is not relevant for other people
% 5) The untracked file "set_parameters_for_test_data_generation.py" is automatically copied to the data output folder for reproductibility
% ****************************************************************
function [...
    output_root_path,...
    path_to_rec_toolbox,...
    deviceId,...
    preproc_min_filt_freq,...
    preproc_max_filt_freq,...
    apply_windowing,...
    preproc_window_length_start,...
    preproc_window_length_end,...
    preproc_window_butter_degree,...
    num_cropped_samples_sinogram_start,...
    num_cropped_samples_sinogram_end,...
    study_path,...
    dataset_shortname,...
    studies,...
    scans,...
    selmats, ...
    names] = set_parameters_for_test_data_generation()

% General parameters
output_root_path = '???';                 % Output folder for the generated dataset
path_to_rec_toolbox = '???';              % Path to model-based reconstruction toolbox.

% Preprocessing parameters for the invivo sinograms (should be the same values as in the corresponding train/val dataset)
deviceId = '???';                           % Id of a MOST device defined in the model-based reconstruction toolbox.   
preproc_min_filt_freq = 500e3;              % Lower cut-off frequency for bandpass filtering
preproc_max_filt_freq = 12e6;               % Higher frequency for bandpass filtering
apply_windowing = false;                    % Apply windowing to remove filtering artifacts at the start and the end of the sinogram.
preproc_window_length_start = 300;          % Windowing length at the beginning of the sinogram
preproc_window_length_end = 300;            % Windowing length at the end of the sinogram
preproc_window_butter_degree = 2;           % Degree of the butterworth filter, whose magneture response in the frequency domain is used as window.
num_cropped_samples_sinogram_start = 30;    % Number of cropped samples at the sinogram start
num_cropped_samples_sinogram_end = 0;       % Number of cropped samples at the sinogram end

% Parameter for data loading
% Note: The data loading routine is specific to the used scanner and  probably requires adjustments if a different scanner is used.
study_path = '???';         % Path to raw data from invivo acquisitions.
dataset_shortname = '???';  % Shore decription of the processed invivo data. The specified name will be used in the folder name of the dataset.
path_to_csv = '???';        % Path to csv file that specifies which studies, scans, wavelengths should be loaded and how the processed sinograms should be named.
addpath(genpath(path_to_rec_toolbox));    % required here for 'read_studies_scans_selmats_from_csv'
[studies, scans, selmats, ~, ~, names] = read_studies_scans_selmats_from_csv(path_to_csv, 1); % Load studies, scans, wavlengths, and names from the specified csv.
end